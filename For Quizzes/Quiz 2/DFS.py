def DFS(G):
    n = len(G)
    pre, post, t = [float('inf')] * n, [float('inf')] * n, 1
    backEdges = []
    for u in range(n):
        if pre[u] == float('inf'):
            t = Explore(G, u, pre, post, t)
    for u in range(n):
        for v in G[u]:
            v -= 1
            if pre[v] < pre[u] < post[u] < post[v]:
                backEdges.append((u, v))
    print(pre)
    print(post)
    print(len(backEdges))
    return pre, post

def Explore(G, u, pre, post, t):
    pre[u] = t
    t += 1
    for v in G[u]:
        v -= 1
        if pre[v] == float('inf'):
            t = Explore(G, v, pre, post, t)
    post[u] = t
    t += 1
    return t

G = [[19, 20, 24], [3, 9, 37], [2, 9, 14], [30], [4, 16, 21, 29, 33], [9, 13, 19, 24, 29, 39], [18, 20, 32, 39], [1, 2, 11, 17, 18, 19, 23, 33, 37], [3, 26, 29, 34, 36, 38], [1, 3, 15], [12, 13, 31, 32], [7, 11, 13, 20, 21, 28, 29], [14, 27, 29], [15, 20, 33], [3, 27], [15, 20, 29, 31], [18, 37, 38], [5, 10, 20, 36, 40], [18, 21, 29], [17, 23, 28], [8, 12, 14, 15, 16, 18, 19, 25, 30, 34, 40], [24, 27, 31, 35], [17, 25, 33, 36], [1, 2, 4, 5, 25, 35, 39], [4, 10, 14, 15, 34, 39], [4, 7, 14, 16, 17, 32], [14, 39], [19, 26], [1, 27], [7, 8, 17, 32, 33], [4, 9, 22, 28, 30, 38], [10, 23, 25, 30, 36, 37], [2, 3, 9, 23, 26, 31], [], [6, 27, 37], [1, 15, 18, 31, 32, 39], [7, 10, 15, 19, 22, 27, 29, 31], [5, 11, 27, 33], [2, 8, 20, 24, 40], [9, 11, 14, 16, 36]]
q2 = DFS(G)
print(q2)